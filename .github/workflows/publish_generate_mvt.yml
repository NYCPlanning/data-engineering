name: ðŸš€ Generate MVT for a published dataset
run-name: "ðŸš€ Generate MVT: ${{ inputs.product }}"

on:
  workflow_dispatch:
    inputs:
      product:
        description: "Which product to publish"
        type: choice
        required: true
        options:
          - cbbr
          - checkbook
          - colp
          - cpdb
          - developments
          - facilities
          - pluto
          - zoningtaxlots
      version:
        description: "Published version"
        type: string
        required: true
      filepath_to_shapefile:
        description: "Filepath within output folder to shapefile to convert"
        type: string
        required: true
      min_zoom:
        description: "Minimum zoom level"
        type: string
        required: true
        default: '0'
      max_zoom:
        description: "Maximum zoom level"
        type: string
        required: true
        default: '5'

jobs:
  build:
    name: Build MVT files
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    container:
      image: nycplanning/dev:latest 
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: 'dcpy'

      - name: Load Secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_S3_ENDPOINT: "op://Data Engineering/DO_keys/AWS_S3_ENDPOINT"
          AWS_SECRET_ACCESS_KEY: "op://Data Engineering/DO_keys/AWS_SECRET_ACCESS_KEY"
          AWS_ACCESS_KEY_ID: "op://Data Engineering/DO_keys/AWS_ACCESS_KEY_ID"

      - name: Download source file
        run: |
          python3 -m dcpy.connectors.edm.publishing download_file \
            --product db-${{ inputs.product }} \
            --version ${{ inputs.version }} \
            --filepath ${{ inputs.filepath_to_shapefile }}

      - name: Generate MVT
        run: | 
          python3 -m dcpy.utils.geospatial \
            --product ${{ inputs.product }} \
            --input-path $(basename ${{ inputs.filepath_to_shapefile }}) \
            --min-zoom ${{ inputs.min_zoom }} \
            --max-zoom ${{ inputs.max_zoom }}

      - name: Upload MVT
        run: | 
          python3 -m dcpy.utils.s3 \
            --bucket de-sandbox \
            --folder-path ${{ inputs.product }}_mvt \
            --s3-path mvt/${{ inputs.product }}/${{inputs.version}}/ \
            --acl private \
            --max-files 800000 \
            --contents-only
