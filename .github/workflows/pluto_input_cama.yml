name: PLUTO Inputs - 📁 CAMA Processing

on:
  workflow_dispatch:
  schedule:
    - cron: 0 13 * * MON

jobs:
  process_cama:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: products/pluto/pluto_build
    container:
      image: nycplanning/build-base:latest
    env:
      RECIPE_ENGINE: postgresql://postgres:postgres@postgis:5432/postgres
      AWS_S3_BUCKET: edm-recipes
    services:
      postgis:
        image: postgis/postgis:15-3.3-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3

      - name: Load Secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_S3_ENDPOINT: "op://Data Engineering/DO_keys/AWS_S3_ENDPOINT"
          AWS_SECRET_ACCESS_KEY: "op://Data Engineering/DO_keys/AWS_SECRET_ACCESS_KEY"
          AWS_ACCESS_KEY_ID: "op://Data Engineering/DO_keys/AWS_ACCESS_KEY_ID"
          SSH_PRIVATE_KEY_GINGER: "op://Data Engineering/DOF_SFTP/private key"
          GINGER_HOST: "op://Data Engineering/DOF_SFTP/url"
          GINGER_USER: "op://Data Engineering/DOF_SFTP/username"

      - name: Run Container Setup
        working-directory: ./
        run: ./bash/docker_container_setup.sh

      - name: Setup ssh
        run: ./pluto ssh setup

      - name: Download file
        id: download
        run: |
          (./pluto ssh download cama) && true
          output=$?
          if [ $output -ne 0 ] && [ $output -ne 2 ]; then 
            exit $output
          else
            echo "file_exists=$output" >> $GITHUB_OUTPUT
          fi

      - name: Cancel
        if: steps.download.outputs.file_exists == 2
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/NYCPlanning/data-engineering/actions/runs/$GITHUB_RUN_ID/cancel
          sleep 5s

      - name: process CAMA
        id: processing
        run: ./pluto import cama

      - name: Library Archive
        run: |
          library archive --name pluto_input_cama_dof \
            --path templates/pluto_input_cama_dof.yml \
            --version ${{ steps.processing.outputs.version }} \
            --latest --s3

      - name: Clean CAMA
        run: ./pluto clean cama

  create_issue_on_failure:
    needs: process_cama
    runs-on: ubuntu-22.04
    if: ${{ failure() && (github.event_name == 'schedule') }}
    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: .github
      - name: Create issue on failure
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTION: ${{ github.workflow }}
          BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          filename: .github/ISSUE_TEMPLATE/scheduled_action_failure.md
