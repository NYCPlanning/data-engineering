name: Zoning Tax lots - üìÅ DataLoading

on:
  workflow_dispatch:
    inputs:
      build_ztl:
        description: "Build Zoning Tax Lots after dataloading is complete"
        type: boolean
        default: false
      build_pluto_minor:
        description: "Build Pluto (minor) after dataloading is complete"
        type: boolean
        default: false
      dev_image: 
        description: "Use dev image specific to this branch? (If exists)"
        type: boolean
        required: true
        default: false

jobs:
  dataloading:
    runs-on: ubuntu-22.04
    container:
      image: nycplanning/build-base:${{ inputs.dev_image && format('dev-{0}', github.head_ref || github.ref_name) || 'latest' }}
    env:
      AWS_S3_BUCKET: edm-recipes
    strategy:
      matrix:
        dataset:
          - dcp_mih
          - dcp_edesignation
          - dcp_commercialoverlay
          - dcp_limitedheight
          - dcp_zoningdistricts
          - dcp_specialpurpose
          - dcp_specialpurposesubdistricts
          - dcp_zoningmapamendments
          - dof_dtm
          - dof_shoreline
          - dof_condo
    steps:
      - uses: actions/checkout@v3

      - name: Load Secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_S3_ENDPOINT: "op://Data Engineering/DO_keys/AWS_S3_ENDPOINT"
          AWS_SECRET_ACCESS_KEY: "op://Data Engineering/DO_keys/AWS_SECRET_ACCESS_KEY"
          AWS_ACCESS_KEY_ID: "op://Data Engineering/DO_keys/AWS_ACCESS_KEY_ID"
          BUILD_ENGINE_SERVER: "op://Data Engineering/EDM_DATA/server_url"

      - name: Finish container setup
        working-directory: ./
        run: ./bash/docker_container_setup.sh

      - name: Library Archive
        run: library archive --name ${{ matrix.dataset }} --latest --s3

  build_ztl:
    needs: [dataloading]
    name: Build Ztl
    if: inputs.build_ztl
    uses: ./.github/workflows/zoningtaxlots_build.yml
    secrets: inherit
    with:
      image_tag: ${{ inputs.dev_image && format('dev-{0}', github.head_ref || github.ref_name) || 'latest' }}
      build_name: ${{ github.head_ref || github.ref_name }}
      recipe_file: recipe

  pluto_minor:
    needs: [dataloading]
    name: Build Pluto Minor
    if: inputs.build_pluto_minor
    uses: ./.github/workflows/pluto_build.yml
    secrets: inherit
    with:
      create_issue: true
      image_tag: ${{ inputs.dev_image && format('dev-{0}', github.head_ref || github.ref_name) || 'latest' }}
      build_name: ${{ github.head_ref || github.ref_name }}
      recipe_file: recipe-minor
