name: ðŸ§ª Tests
run-name: ðŸ§ª Tests (${{ github.event_name }})

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check_changes:
    name: Check changed files
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: read
    outputs:
      path_filters: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request'
        id: filter
        with:
          filters: |
            dcpy:
              - dcpy/**
              - pyproject.toml
              - python/**
              - docker/**
            template:
              - .github/workflows/test.yml
              - .github/workflows/build.yml
              - .github/workflows/template_test.yml
              - products/template/**
              - dcpy/**
              - docker/**
              - python/**
            data-library:
              - data-library/**
              - python/**
              - docker/**
            qa:
              - apps/qa/**
              - dcpy/**
              - python/**
              - docker/**
            cbbr:
              - products/cbbr/**
              - python/**
              - docker/**
            checkbook:
              - products/checkbook/**
              - python/**
              - docker/**
            zap:
              - products/zap-opendata/**
              - python/**
              - docker/**
            docker:
              - python/**
              - docker/**

  set_docker_image_tag:
    name: Set docker image tag
    needs: check_changes
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: set image tag
        id: tag
        run: |
          tag="${{ contains(needs.check_changes.outputs.path_filters, 'docker') && format('dev-{0}', github.head_ref || github.ref_name) || 'latest'}}"
          echo "tag=$tag" >> $GITHUB_OUTPUT

  build_docker_images:
    name: docker image ${{ matrix.image }}:${{ needs.set_docker_image_tag.outputs.tag }}
    needs: 
      - check_changes
      - set_docker_image_tag
    runs-on: ubuntu-22.04
    env:
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
    strategy: 
      matrix: 
        image:
          - build-base
          - build-geosupport
          - dev
    steps:
      - uses: actions/checkout@v4
        if: contains(needs.check_changes.outputs.path_filters, 'docker')
      - name: publish images
        if: contains(needs.check_changes.outputs.path_filters, 'docker')
        working-directory: docker
        run: ./publish.sh "${{ matrix.image }}" "${{ needs.set_docker_image_tag.outputs.tag }}"

  test:
    uses: ./.github/workflows/test_helper.yml
    needs: 
      - check_changes
      - set_docker_image_tag
      - build_docker_images
    with:
      image_tag: ${{ needs.set_docker_image_tag.outputs.tag }}
      path_filter: ${{ needs.check_changes.outputs.path_filters }}
    secrets: inherit

  build:
    needs: build_docker_images
    # only run build as part of tests in the case of the PRs generated by python_compile_requirements.yml
    if: ${{ github.head_ref == 'compile_python_reqs' }}
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      dataset_name: all
      build_note: check newly compiled python requirements
      run_export: true
      recipe_file: recipe
      dev_image: true
