name: KPDB - 🏗️ Build

on:
  workflow_call:
    inputs:
      run_export:
        type: boolean
        required: true

jobs:
  build:
    name: build
    runs-on: ubuntu-22.04
    container:
      image: nycplanning/build-base:latest
    defaults:
      run:
        shell: bash
        working-directory: ./products/knownprojects
    env:
      BUILD_ENGINE_DATABASE: ${{ secrets.SQL_ENGINE_EDM_DATA_SERVER }}/kpdb
      BUILD_ENGINE_SCHEMA: build_${{ github.event.pull_request.number || github.ref_name }}
      EDM_DATA: ${{ secrets.EDM_DATA }}
      AWS_S3_ENDPOINT: ${{ secrets.DO_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: Set build environment variables
        run: |
          # # replace dashes with underscores to create a valid postgres schema name
          BUILD_ENGINE_SCHEMA=$(echo ${BUILD_ENGINE_SCHEMA} | tr - _)
          echo "BUILD_ENGINE_SCHEMA=$BUILD_ENGINE_SCHEMA" >> "$GITHUB_ENV"
          # set postgres schema search path to prioritize BUILD_ENGINE_SCHEMA
          BUILD_ENGINE=${BUILD_ENGINE_DATABASE}?options=--search_path%3D${BUILD_ENGINE_SCHEMA},public
          echo "BUILD_ENGINE=$BUILD_ENGINE" >> "$GITHUB_ENV"

      - name: Setup build environment
        working-directory: ./
        run: ./bash/docker_container_setup.sh

      - name: dataloading ..
        run: ./bash/01_dataloading.sh

      - name: build ...
        run: ./bash/02_build.sh

      - name: aggregate ...
        run: ./bash/03_aggregate.sh

      - name: export ...
        run: ./bash/04_export.sh

      - name: upload ...
        if: inputs.run_export
        run: python3 -m python.upload
