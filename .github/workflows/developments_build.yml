name: DevDB - 🏗️ Build

on:
  workflow_dispatch:
    inputs:
      export:
        description: "Would you like to export the outputs and QAQC to DigitalOcean? (yes/no)"
        type: boolean
        required: true
        default: false
      archive:
        description: "Would you like to archive developments and dcp_housing to EDM-DATA? (yes/no)"
        type: boolean
        required: true
        default: false

jobs:
  build:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: db-developments
    container: 
      image: nycplanning/build-geosupport:latest
      env:
        BUILD_ENGINE: postgresql://postgres:postgres@postgis:5432/devdb
        EDM_DATA: ${{ secrets.EDM_DATA }}
        AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    services:
      postgis:
        image: postgis/postgis:14-3.3-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: devdb
        options: >-
          --shm-size=1g
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3

      - name: Finish container setup ...
        run: ./bash/docker_container_setup.sh

      - name: 1. dataloading for EDM builds
        run: ./devdb.sh dataloading edm && ls -l

      - name: Clear cache
        run: rm -rf .library

      - name: 2. build dev_db ...
        run: |
          ./devdb.sh build
          ./devdb.sh aggregate

      - name: 3. qaqc dev_db ...
        run: ./devdb.sh qaqc

      - name: 4. Export ...
        if: inputs.export
        run: |
          ./devdb.sh export
          ./devdb.sh upload

      - name: 5. Archive ...
        if: inputs.archive
        run: ./devdb.sh archive
