name: DevDB - üèóÔ∏è Build

on:
  workflow_call:
    inputs:
      image_tag:
        type: string
        required: false

jobs:
  build:
    name: Build DevDB
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: products/developments
    container:
      image: nycplanning/build-geosupport:${{ inputs.image_tag || 'latest' }}
      env:
        BUILD_ENGINE_DB: db-devdb
        BUILD_ENGINE_SCHEMA: ${{ github.head_ref || github.ref_name }}
    steps:
      - uses: actions/checkout@v3

      - name: Load Secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_S3_ENDPOINT: "op://Data Engineering/DO_keys/AWS_S3_ENDPOINT"
          AWS_SECRET_ACCESS_KEY: "op://Data Engineering/DO_keys/AWS_SECRET_ACCESS_KEY"
          AWS_ACCESS_KEY_ID: "op://Data Engineering/DO_keys/AWS_ACCESS_KEY_ID"
          BUILD_ENGINE_SERVER: "op://Data Engineering/EDM_DATA/server_url"
          EDM_DATA: "op://Data Engineering/EDM_DATA/defaultdb_url"

      - name: Finish container setup ...
        working-directory: ./
        run: ./bash/docker_container_setup.sh

      - name: Set build environment variables
        working-directory: ./
        run: ./bash/build_env_setup.sh

      - name: 1. dataloading for EDM builds
        run: ./devdb.sh dataloading edm && ls -l

      - name: Clear cache
        run: rm -rf .library

      - name: 2. build dev_db ...
        run: |
          ./devdb.sh build
          ./devdb.sh aggregate

      - name: 3. qaqc dev_db ...
        run: ./devdb.sh qaqc

      - name: 4. Export ...
        run: |
          ./devdb.sh export
          ./devdb.sh upload

      # - name: 5. Archive ...
      #   if: inputs.archive
      #   run: ./devdb.sh archive
