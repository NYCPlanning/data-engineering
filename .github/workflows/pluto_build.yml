name: PLUTO - üèóÔ∏è Build

on:
  workflow_call:
    inputs:
      # minor_version:
      #   type: boolean
      #   required: true
      run_export:
        type: boolean
        required: true
  workflow_dispatch:
    inputs:
      # minor_version:
      #   description: "Run minor version build"
      #   type: boolean
      #   required: true
      #   default: false
      run_export:
        description: "Run Export Step and Upload to DO"
        type: boolean
        required: true
        default: false
jobs:
  version:
    name: get version
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.version }}
      is_minor_version: ${{ steps.minor_version.outputs.is_minor_version }}
    steps:
      - uses: actions/checkout@v3

      - name: Get Version
        id: version
        run: |
          source pluto_build/version.env
          echo "::set-output name=version::$VERSION"
          echo "Version is $VERSION"
      - name: Check for minor version
        id: minor_version
        run: |
          source pluto_build/version.env
          SUBSTRING='.'

          if grep -q "$SUB" <<< "$STR"
          then
            echo "::set-output name=is_minor_version::true"
          else
            echo "::set-output name=is_minor_version::false"
          fi
          echo "is_minor_version is $VERSION"
  build:
    needs: [version]
    runs-on: ubuntu-22.04
    container: ghcr.io/osgeo/gdal:ubuntu-small-3.6.4
    services:
      postgres:
        image: postgis/postgis:13-3.3-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --shm-size=2gb
        ports:
          - 5432:5432
    env:
      BUILD_ENGINE: postgresql://postgres:postgres@postgres:5432/postgres
      EDM_DATA: ${{ secrets.EDM_DATA }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: install dependencies
        shell: bash
        working-directory: ./db-pluto/pluto_build
        run: ./pluto setup init

      - name: dataloading (major) ..
        shell: bash
        working-directory: ./db-pluto/pluto_build
        run: ./01_dataloading.sh
        if: needs.version.outputs.is_minor_version == false

      - name: dataloading (minor) ..
        shell: bash
        working-directory: ./db-pluto/pluto_build
        run: ./01_dataloading_minor.sh
        if: needs.version.outputs.is_minor_version == true

      - name: building ...
        shell: bash
        working-directory: ./db-pluto/pluto_build
        run: ./02_build.sh

      - name: apply corrections
        shell: bash
        working-directory: ./db-pluto/pluto_build
        run: ./03_corrections.sh

      - name: Archive
        shell: bash
        working-directory: ./db-pluto/pluto_build
        run: ./04_archive.sh
        if: inputs.run_export

      - name: QAQC
        shell: bash
        working-directory: ./db-pluto/pluto_build
        run: ./05_qaqc.sh
        if: inputs.run_export

      - name: create shapefile
        shell: bash
        working-directory: ./db-pluto/pluto_build
        run: |
          ./06_export.sh
        if: inputs.run_export
