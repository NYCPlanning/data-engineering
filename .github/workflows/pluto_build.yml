name: PLUTO - 🏗️ Build

on:
  workflow_call:
    inputs:
      image_tag:
        type: string
        required: false
      build_name: 
        type: string
        required: true
      create_issue:
        type: boolean
        default: false
      recipe_file:
        type: string
        required: true
      version:
        type: string
        required: false
      repeat:
        type: boolean
        default: false

jobs:
  build:
    name: Build PLUTO
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: products/pluto/pluto_build
    container:
      image: nycplanning/build-base:${{ inputs.image_tag || 'latest' }}
    env:
      BUILD_ENGINE_DB: db-pluto
      BUILD_NAME: ${{ inputs.build_name }}
      BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Load Secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_S3_ENDPOINT: "op://Data Engineering/DO_keys/AWS_S3_ENDPOINT"
          AWS_SECRET_ACCESS_KEY: "op://Data Engineering/DO_keys/AWS_SECRET_ACCESS_KEY"
          AWS_ACCESS_KEY_ID: "op://Data Engineering/DO_keys/AWS_ACCESS_KEY_ID"
          BUILD_ENGINE_SERVER: "op://Data Engineering/EDM_DATA/server_url"
          EDM_DATA: "op://Data Engineering/EDM_DATA/defaultdb_url"

      - name: Finish container setup
        working-directory: ./
        run: ./bash/docker_container_setup.sh

      - name: Set build environment variables
        working-directory: ./
        run: ./bash/build_env_setup.sh

      - name: Load data
        working-directory: products/pluto
        env:
          version: ${{ github.event.inputs.version && format('--version {0}', github.event.inputs.version) || '' }}
          repeat: ${{ github.event.inputs.repeat == 'true' && '--repeat' || '' }}
        run: python3 -m dcpy.builds.load recipe --recipe-path ./${{ inputs.recipe_file }}.yml $version $repeat

      - name: Set versions env vars
        working-directory: products/pluto
        run: |
          echo VERSION=$(yq .version ${{ inputs.recipe_file }}.lock.yml) >> "$GITHUB_ENV" && \
          echo VERSION_PREV=$(yq '.env.version_prev' ${{ inputs.recipe_file }}.lock.yml) >> "$GITHUB_ENV"

      - name: Load Local Data
        run: ./01_load_local_csvs.sh

      - name: building ...
        run: ./02_build.sh

      - name: apply corrections
        run: ./03_corrections.sh

      - name: Archive
        run: ./04_archive.sh

      - name: QAQC
        run: ./05_qaqc.sh

      - name: Export and Upload
        run: ./06_export.sh

      - name: Create Issue - Pluto Draft Succeeded
        if: success() && inputs.create_issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRODUCT: Pluto
          PRODUCT_VERSION: ${{ env.VERSION }}
          SUMMARY_NOTE: "Build Success ✅"
          REQUIRED_ACTION: "Review and publish the build."
          BUILD_URL: ${{ env.BUILD_URL }}
        with:
          filename: .github/ISSUE_TEMPLATE/product_new_draft_created.md

      - name: Create Issue - Pluto Draft Failed to Build
        if: failure() && inputs.create_issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRODUCT: Pluto
          PRODUCT_VERSION: ${{ env.VERSION }}
          SUMMARY_NOTE: "Build Failed 🚨"
          REQUIRED_ACTION: "Investigate and rebuild PLUTO."
          BUILD_URL: ${{ env.BUILD_URL }}
        with:
          filename: .github/ISSUE_TEMPLATE/product_new_draft_created.md
