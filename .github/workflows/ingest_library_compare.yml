name: Ingest 'Run and Compare' Tool
run-name: "Ingest 'Run and Compare' Tool: ${{ inputs.dataset }}"

on:
  workflow_dispatch:
    inputs:
      dataset:
        description: "Name of the dataset (required)"
        required: true
      schema_name:
        description: "Schema name where to store data tables (required)"
        required: true
      version:
        description: "The version of the dataset (i.e. 22v2, 21C) if needed (optional)"
        required: false
      key_columns:
        description: "Key columns for comparison. Ex: 'column1,column2' (optional)"
        required: false
      ignore_columns:
        description: "Columns to ignore during comparison. Ex: 'column1,column2' (optional)"
        required: false
      columns_only_comparison:
        description: "Compare only column names (optional)"
        type: boolean
        required: false
        default: false

jobs:
  dataloading:
    runs-on: ubuntu-22.04
    container:
      image: nycplanning/build-base:latest
    defaults:
      run:
        shell: bash
    env:
      TEMPLATE_DIR: ./ingest_templates
      BUILD_NAME: ${{ inputs.schema_name }}
      RECIPES_BUCKET: edm-recipes
      PUBLISHING_BUCKET: edm-publishing
    steps:
      - uses: actions/checkout@v4

      - name: Load Secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_S3_ENDPOINT: "op://Data Engineering/DO_keys/AWS_S3_ENDPOINT"
          AWS_SECRET_ACCESS_KEY: "op://Data Engineering/DO_keys/AWS_SECRET_ACCESS_KEY"
          AWS_ACCESS_KEY_ID: "op://Data Engineering/DO_keys/AWS_ACCESS_KEY_ID"
          BUILD_ENGINE_SERVER: "op://Data Engineering/EDM_DATA/server_url"
          SOCRATA_USER: "op://Data Engineering/DCP_OpenData/username"
          SOCRATA_PASSWORD: "op://Data Engineering/DCP_OpenData/password"

      - name: Finish container setup ...
        run: ./bash/docker_container_setup.sh

      - name: Extract dataset with ingest & library and upload results to database
        env:
          version: ${{ github.event.inputs.version && format('--version {0}', github.event.inputs.version) || '' }}
          key_columns: ${{ github.event.inputs.key_columns && format('--key {0}', github.event.inputs.key_columns) || '' }}
          ignore_columns: ${{ github.event.inputs.ignore_columns && format('--ignore {0}', github.event.inputs.ignore_columns) || '' }}
          columns_only_comparison: ${{ github.event.inputs.columns_only_comparison == 'true' && '--columns-only' || '' }}
        run: |
          python3 -m dcpy lifecycle scripts validate_ingest run_and_compare ${{ inputs.dataset }} $version $key_columns $ignore_columns $columns_only_comparison
