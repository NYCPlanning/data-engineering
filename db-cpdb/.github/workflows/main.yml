name: Build/Run CPDB

on: [workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      EDM_DATA: ${{ secrets.EDM_DATA }}
      BUILD_ENGINE: postgresql://postgres:postgres@localhost:5432/postgres
      AWS_S3_ENDPOINT: ${{ secrets.DO_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_ACCESS_KEY }}
    services:
      postgres:
        image: postgis/postgis:15-3.3-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: install dependencies
        run: |
          sudo apt install -y gdal-bin
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv ./mc /usr/bin
          mc config host add spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: 01 dataloading
        run: ./cpdb.sh dataloading

      - name: 02 Build Attribute
        run: ./cpdb.sh attribute

      - name: 03 Adminbounds
        run: ./cpdb.sh adminbounds

      - name: 04 Analysis
        run: ./cpdb.sh analysis

      - name: 05 Export
        run: ./cpdb.sh export

      - name: 06 Upload to DigitalOcean
        run: ./cpdb.sh upload

      - name: 07 Archive to secrets.EDM_DATA
        if: github.ref == 'refs/heads/main'
        run: ./cpdb.sh archive --all
