name: ðŸ§ª Tests
run-name: ðŸ§ª Tests (${{ github.event_name }})

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check_formatting:
    name: Check formatting of files
    runs-on: ubuntu-22.04
    container:
      image: nycplanning/dev:latest
    steps:
      - uses: actions/checkout@v3

      - name: Check python files
        run: black --diff --color --check .

      - name: Check sql files in products
        run: |
          # TODO: Gradually expand this to cover more products
          sqlfluff lint products/template/sql
          sqlfluff lint products/template/models --templater=jinja
          sqlfluff lint products/cpdb/sql/
          sqlfluff lint products/knownprojects/
          sqlfluff lint products/pluto/pluto_build/sql/
          sqlfluff lint products/zoningtaxlots/sql/

  check_changes:
    name: Check changed files
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      path_filters: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request'
        id: filter
        with:
          filters: |
            dcpy:
              - dcpy/**
              - pyproject.toml
              - python/**
              - .github/workflows/dcpy_test.yml
            build:
              - .github/workflows/test.yml
              - .github/workflows/build.yml
              - .github/workflows/template_test.yml
              - products/template/**
              - dcpy/**
              - docker/**
              - python/**
            data-library:
              - .github/workflows/data_library_test.yml
              - data-library/**.py
              - data-library/**.toml
              - data-library/**.yml
              - docker/**
              - python/**
            qa:
              - apps/qa/**
              - dcpy/**
              - docker/**
              - python/**
            cbbr:
              - products/cbbr/**
            cpdb:
              - products/cpdb/**
            checkbook:
              - products/checkbook/**
            facilities:
              - products/facilities/**
            knownprojects:
              - products/knownprojects/**
            zap:
              - products/zap-opendata/**
      - name: Confirm changes
        run: |
          echo "path filters with changed files: ${{ steps.filter.outputs.changes }}"
  dcpy:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'dcpy')
    uses: ./.github/workflows/dcpy_test.yml
    secrets: inherit
  build:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'build')
    uses: ./.github/workflows/template_test.yml
    secrets: inherit
  data-library:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'data-library')
    uses: ./.github/workflows/data_library_test.yml
    secrets: inherit
  cbbr:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'cbbr')
    uses: ./.github/workflows/cbbr_test.yml
    secrets: inherit
  cpdb:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'cpdb')
    uses: ./.github/workflows/cpdb_build.yml
    with:
      run_export: true
    secrets: inherit
  checkbook:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'checkbook')
    uses: ./.github/workflows/checkbook_test.yml
    secrets: inherit
  facilities:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'facilities')
    uses: ./.github/workflows/facilities_test.yml
    secrets: inherit
  knownprojects:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'knownprojects')
    uses: ./.github/workflows/knownprojects_test.yml
    secrets: inherit
  qa:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'qa')
    uses: ./.github/workflows/qa_test.yml
    secrets: inherit
  zap:
    needs: check_changes
    if: github.event_name != 'pull_request' || contains(needs.check_changes.outputs.path_filters, 'zap')
    uses: ./.github/workflows/zap_test.yml
    secrets: inherit
