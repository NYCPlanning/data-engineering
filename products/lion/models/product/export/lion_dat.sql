SELECT
    boroughcode AS "Borough",
    face_code AS "Face Code",
    segment_seqnum AS "Sequence Number",
    segmentid AS "Segment ID",
    five_digit_street_code AS "5-Digit Street Code (5SC)",
    lgc1 AS "LGC1",
    lgc2 AS "LGC2",
    lgc3 AS "LGC3",
    lgc4 AS "LGC4",
    board_of_elections_lgc_pointer AS "Board of Elections LGC Pointer",
    from_sectionalmap AS "From-Sectional Map",
    from_nodeid AS "From-Node ID",
    from_x AS "From-X Coordinate",
    from_y AS "From-Y Coordinate",
    to_sectionalmap AS "To-Sectional Map",
    to_nodeid AS "To-Node ID",
    to_x AS "To-X Coordinate",
    to_y AS "To-Y Coordinate",
    left_2000_census_tract AS "Left 2000 Census Tract",
    left_atomicid AS "Left Dynamic Block", -- TODO: "last 3 bytes"
    l_low_hn AS "Left Low House Number",
    l_high_hn AS "Left High House Number",
    lsubsect AS "Left Dept of Sanitation Subsection", -- TODO: only 2 leftmost bytes
    l_zip AS "Left Zip Code",
    left_assembly_district AS "Left Assembly District",
    left_election_district AS "Left Election District",
    left_school_district AS "Left School District",
    right_2000_census_tract AS "Right 2000 Census Tract",
    right_atomicid AS "Right Dynamic Block", -- TODO: "last 3 bytes"
    r_low_hn AS "Right Low House Number",
    r_high_hn AS "Right High House Number",
    rsubsect AS "Right Dept of Sanitation Subsection", -- TODO: only 2 leftmost bytes
    r_zip AS "Right Zip Code",
    right_assembly_district AS "Right Assembly District",
    right_election_district AS "Right Election District",
    right_school_district AS "Right School District",
    split_election_district_flag AS "Split Election District Flag",
    ' ' AS "Filler (formerly Split Community School District Flag)",
    sandist_ind AS "Sanitation District Boundary Indicator",
    traffic_direction AS "Traffic Direction",
    segment_locational_status AS "Segment Locational Status",
    feature_type_code AS "Feature Type Code",
    nonped AS "Non-Pedestrian Flag",
    CASE
        WHEN continuous_parity_flag = '1' THEN 'L'
        WHEN continuous_parity_flag = '2' THEN 'R'
        ELSE ' '
    END AS "Continuous Parity Indicator",
    ' ' AS "Filler (formerly the Near BQ-Boundary Flag)",
    borough_boundary_indicator AS "Borough Boundary Indicator",
    twisted_parity_flag AS "Twisted Parity Flag",
    special_address_flag AS "Special Address Flag",
    curve_flag AS "Curve Flag",
    center_of_curvature_x AS "Center of Curvature X-Coordinate",
    center_of_curvature_y AS "Center of Curvature Y-Coordinate",
    segment_length_ft AS "Segment Length in Feet",
    from_level_code AS "From Level Code",
    to_level_code AS "To Level Code",
    trafdir_ver_flag AS "Traffic Direction Verification Flag",
    segment_type AS "Segment Type Code",
    coincident_seg_count AS "Coincident Segment Counter",
    incex_flag AS "Include/Exclude Flag",
    rw_type AS "Roadway Type",
    physicalid AS "PHYSICALID",
    genericid AS "GENERICID",
    nypdid AS "NYPDID",
    fdnyid AS "FDNYID",
    l_blockfaceid AS "Left BLOCKFACEID",
    r_blockfaceid AS "Right BLOCKFACEID",
    status AS "STATUS",
    streetwidth AS "Street Width",
    streetwidth_irr AS "Irregular Street Width Flag",
    bike_lane AS "Bike Lane Indicator",
    fcc AS "FCC",
    right_of_way_type AS "Right of Way Type",
    left_2010_census_tract AS "Left 2010 Census Tract",
    right_2010_census_tract AS "Right 2010 Census Tract",
    -- TODO: 2020 census tracts?
    lgc5 AS "LGC5",
    lgc6 AS "LGC6",
    lgc7 AS "LGC7",
    lgc8 AS "LGC8",
    lgc9 AS "LGC9",
    legacy_segmentid AS "Legacy SEGMENTID"
FROM {{ ref("lion") }}
