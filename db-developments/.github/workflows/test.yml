name: Run DevDB/HousingDB
on:
  push:
  workflow_dispatch:
    inputs:
      rebuild:
        description: "Would you like to rebuild DevDB (yes/no)? If no, set archive or export to yes."
        required: true
        default: "yes"
      export:
        description: "Would you like to export the outputs and QAQC to DigitalOcean? (yes/no)"
        required: false
        default: "no"
      archive:
        description: "Would you like to archive developments and dcp_housing to EDM-DATA? (yes/no)"
        required: false
        default: "no"

jobs:
  build:
    runs-on: ubuntu-22.04
    services:
      db:
        image: postgis/postgis:15-3.3-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: devdb
        options: >-
          --shm-size=1g
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 25060:5432
    env:
      BUILD_ENGINE: postgresql://postgres:postgres@localhost:25060/devdb
      EDM_DATA: ${{ secrets.EDM_DATA }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: config workflows
        id: config
        run: |
          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            echo "::set-output name=rebuild::${{  github.event.inputs.rebuild }}"
            echo "::set-output name=archive::${{  github.event.inputs.archive }}"
            echo "::set-output name=export::${{  github.event.inputs.export }}"

          else
            echo "::set-output name=rebuild::yes"
            echo "::set-output name=archive::no"
            echo "::set-output name=export::no"

          fi

      - name: install dependencies ...
        run: |
          sudo apt update
          sudo apt install -y gdal-bin
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv ./mc /usr/bin
          mc alias set spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4
          sudo apt install python3-pip
          pip3 install pandas sqlalchemy psycopg2

      - name: 1. dataloading for EDM builds
        if: steps.config.outputs.rebuild == 'yes'
        run: ./devdb.sh dataloading edm && ls -l

      - name: Clear cache
        run: rm -rf .library

      - name: 2. build dev_db ...
        if: steps.config.outputs.rebuild == 'yes'
        run: |
          ./devdb.sh build
          ./devdb.sh aggregate

      - name: 3. qaqc dev_db ...
        if: steps.config.outputs.rebuild == 'yes'
        run: |
          ./devdb.sh qaqc

      - name: 4. Export ...
        if: steps.config.outputs.export == 'yes'
        run: |
          ./devdb.sh export
          ./devdb.sh upload

      - name: 5. Archive ...
        if: steps.config.outputs.archive == 'yes'
        run: ./devdb.sh archive
