name: PLUTO - 🏗️ Build

on:
  workflow_call:
    inputs:
      run_export:
        type: boolean
        required: true
  workflow_dispatch:
    inputs:
      run_export:
        description: "Run Export Step and Upload to DO"
        type: boolean
        required: true
        default: false
jobs:
  version:
    name: check version
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: products/pluto/pluto_build
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      is_minor_version: ${{ steps.check_minor_version.outputs.is_minor_version }}
    steps:
      - uses: actions/checkout@v3

      - name: Check Version
        id: get_version
        run: |
          source version.env
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version is $VERSION"
      - name: Check for minor version
        id: check_minor_version
        run: |
          source version.env
          SUBSTRING="."

          if [[ "$VERSION" =~ .*"$SUBSTRING".* ]];
          then
            is_minor_version=true
            echo "$VERSION is a minor version"
          else
            is_minor_version=false
            echo "$VERSION is a major version"
          fi
          echo "is_minor_version=$is_minor_version" >> $GITHUB_OUTPUT
  build:
    needs: [version]
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: products/pluto/pluto_build
    container:
      image: nycplanning/build-base:latest
    env:
      BUILD_ENGINE: postgresql://postgres:postgres@postgis:5432/postgres
      EDM_DATA: ${{ secrets.EDM_DATA }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    services:
      postgis:
        image: postgis/postgis:14-3.3-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --shm-size=4gb
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3

      - name: Check is_minor, finish container setup
        working-directory: ./
        run: |
          echo "is_minor: ${{ needs.version.outputs.is_minor_version }}"
          ./bash/docker_container_setup.sh

      - name: clean out shared libs
        run: |
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: dataloading (major) ..
        run: ./01_dataloading.sh
        if: needs.version.outputs.is_minor_version == 'false'

      - name: dataloading (minor) ..
        run: ./01_dataloading_minor.sh
        if: needs.version.outputs.is_minor_version == 'true'

      - name: clean out raw source data 
        run: rm -rf .library

      - name: building ...
        run: ./02_build.sh

      - name: apply corrections
        run: ./03_corrections.sh

      - name: Archive
        run: ./04_archive.sh
        if: inputs.run_export

      - name: QAQC
        run: ./05_qaqc.sh
        if: inputs.run_export

      - name: Export and Upload
        run: ./06_export.sh
        if: inputs.run_export
