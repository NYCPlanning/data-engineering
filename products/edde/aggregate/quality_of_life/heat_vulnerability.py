import pandas as pd
from ingest.ingestion_helpers import add_leading_zero_PUMA
from internal_review.set_internal_review_file import set_internal_review_files
from utils.PUMA_helpers import get_all_boroughs


def heat_vulnerability(geography):
    assert geography in ["puma", "borough", "citywide"]
    if geography == "puma":
        df = pd.read_excel(
            "./resources/quality_of_life/HVI_PUMA_Subboro_forSharing.xlsx",
            usecols=["PUMACE10", "HVI"],
            dtype={"PUMACE10": str, "HVI": int},
        )

        df.rename(
            columns={"PUMACE10": "puma", "HVI": "health_heat_index"},
            inplace=True,
        )

        print(f"Successfully loaded heat vulnerability xlsx")

        df = add_leading_zero_PUMA(df)
        df = df.set_index("puma")
        print(f"Add leading zero to puma column")

        return df
    elif geography == "borough":
        return pd.DataFrame(
            index=get_all_boroughs(), columns=["health_heat_index"], data=None
        )
    else:
        return pd.DataFrame(
            index=["citywide"], columns=["health_heat_index"], data=None
        )


def set_results_for_internal_review(df, geography):
    """Saves results to .csv so that reviewers can see results during code review"""
    set_internal_review_files(
        data=[
            (df, "heat_vulnerability_puma.csv", geography),
        ],
        category="quality_of_life",
    )
