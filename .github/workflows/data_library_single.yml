name: Data Library - üìÅ Update a Single Dataset
run-name: "Data Library - üìÅ Update a Single Dataset: ${{ inputs.dataset }}"

on:
  workflow_dispatch:
    inputs:
      dataset:
        description: "Name of the dataset (required)"
        required: true
        default: dcp_mappluto
      latest:
        type: boolean
        description: "Tag this version as latest (optional)"
        required: false
        default: true
      version:
        description: "The version of the dataset (i.e. 22v2, 21C) if needed (optional)"
        required: false
      export:
        type: boolean
        description: "Export to S3"
        default: true
      compress:
        type: boolean
        description: "Compress export"
        default: false

jobs:
  dataloading:
    runs-on: ubuntu-22.04
    container: python:3.11-slim
    defaults:
      run:
        shell: bash
        working-directory: data-library
    env:
      AWS_S3_BUCKET: edm-recipes
    steps:
      - uses: actions/checkout@v3

      - name: env setup
        run: ./library.sh setup ../python/constraints.txt

      - name: Load Secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_S3_ENDPOINT: "op://Data Engineering/DO_keys/AWS_S3_ENDPOINT"
          AWS_SECRET_ACCESS_KEY: "op://Data Engineering/DO_keys/AWS_SECRET_ACCESS_KEY"
          AWS_ACCESS_KEY_ID: "op://Data Engineering/DO_keys/AWS_ACCESS_KEY_ID"

      - name: Archive ${{ github.event.inputs.dataset }}
        env:
          latest: ${{ github.event.inputs.latest == 'true' && '--latest' || '' }}
          version: ${{ github.event.inputs.version && format('--version {0}', github.event.inputs.version) || '' }}
          export: ${{ github.event.inputs.export == 'true' && '--s3' || '' }}
          compress: ${{ github.event.inputs.compress == 'true' && '--compress' || '' }}
        run: |
          library archive --name ${{ github.event.inputs.dataset }} -o pgdump $export $compress $latest $version
          # library archive --name ${{ github.event.inputs.dataset }} -o shapefile $export $compress $latest $version
          library archive --name ${{ github.event.inputs.dataset }} -o csv $export $compress $latest $version
